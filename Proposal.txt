Manav Dhelia, Furquaan Syed
Embedded project

Motivation: 
  We chose to work on this project for a couple of different reasons. 
Both of us were more excited at the prospect of working with hardware, as opposed to a software heavy project. 
Between the two of us, we have experience working with different microcontrollers, writing firmware for those microcontrollers, and Bluetooth Low Energy expertise along with other wireless communication protocols. 
Our machine learning knowledge is a slightly weakpoint, however, we believe that we can develop a time synchronization protocol without implementing any machine learning algorithms.

Design Goals: Develop a time sync protocol using timestamped sensor data from two embedded devices.
The data will be received by a raspberry pi device, and the synchronization protocol will run on the
raspberry pi device
Deliverables:
- Time Synchronization Protocol implemented between ESP32 Things and Raspberry Pi
-  Analysis and measurement of the time delay experienced by data packets across a network of two embedded devices
- Use various device sensors on the ESP for estimation of clock drift between the two devices
System blocks: See block diagram

Project timeline: 
Week 1-2: Gather and characterize data from sensors 
Week 3-4: Set up communication protocols between the two devices 
Week 4-5: Implement synchronization protocol and possibly machine learning model
Week 6: Characterize time delay

References:
- HAEST: Harvesting Ambient Events to Synchronize Time across Heterogeneous IoT Devices
- Exploiting Smartphone Peripherals for Precise Time Synchronization

Hardware requirements: ESP32 Things, Raspberry Pi, Optical sensor, Audio sensor, IMU sensor, DHT sensor, Pressure sensor.
Software Requirements: Circuitpython, Arduino C++



Team member responsibilities:
Manav: Networking, research, and hardware lead
Furquaan: Setup, software, and writing lead
